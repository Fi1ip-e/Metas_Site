{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\Filipe\\\\projeto\\\\site\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, respEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(meta);\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return fetch(\"http://localhost:8081/meta\", {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return res.json();\n\n            case 9:\n              respEnv = _context.sent;\n\n              if (respEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: 'error',\n                  message: respEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: 'success',\n                  message: respEnv.message\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              setResponse({\n                formSave: false,\n                type: 'success',\n                message: ''\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minhas Metas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 44\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 112\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 118\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 123\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Status\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 116\n      }, this), response.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: true,\n        children: \"Envando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 90\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cadastrar, \"41Q4vQ6JvBR+6Bb9al1pE3jQyCk=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["C:/Users/filip/Desktop/Filipe/projeto/site/pages/cadastrar.js"],"names":["React","useState","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","e","target","value","sendMeta","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","res","json","respEnv","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Cadastrar(){\r\n    const [meta, setMeta] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: '',\r\n    });\r\n\r\n    const [response, setResponse] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n    const onChangeInput = e => setMeta({...meta, [e.target.name]: e.target.value})\r\n    const sendMeta = async e => {\r\n        e.preventDefault();\r\n        console.log(meta);\r\n\r\n        setResponse({formSave: true});\r\n        try {\r\n        const res = await fetch(\"http://localhost:8081/meta\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(meta),\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n        const respEnv = await res.json();\r\n\r\n        if (respEnv.error){\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: respEnv.message,\r\n            })\r\n        }\r\n        else {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'success',\r\n                message: respEnv.message,\r\n            });\r\n        }\r\n    } catch (err) {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'success',\r\n                message: '',\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Cadastrar minhas Metas</h1>\r\n            <hr />\r\n            {response.type === 'error' ? <p>{response.message}</p> : \"\"}\r\n            {response.type === 'success' ? <p>{response.message}</p> : \"\"}\r\n            <form onSubmit={sendMeta}>\r\n                <label>Nome: </label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Nome da meta\" onChange={onChangeInput} /><br /><br />\r\n                <label>Descrição: </label>\r\n                <input type=\"text\" name=\"description\" id=\"description\" placeholder=\"Descrição\" onChange={onChangeInput} /><br /><br />\r\n                <label>Status: </label>\r\n                <input type=\"text\" name=\"status\" id=\"status\" placeholder=\"Status\" onChange={onChangeInput} /><br /><br />\r\n                \r\n                {response.formSave ? <button type=\"submit\" disabled>Envando...</button>: <button type=\"submit\">Cadastrar</button>}\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}