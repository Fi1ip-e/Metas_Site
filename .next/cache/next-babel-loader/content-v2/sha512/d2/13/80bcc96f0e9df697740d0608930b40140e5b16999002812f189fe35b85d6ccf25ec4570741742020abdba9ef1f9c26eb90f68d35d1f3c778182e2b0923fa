{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\Filipe\\\\projeto\\\\site\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap'; //import { Button } from 'reactstrap';\n//<Button color=\"danger\">Danger!</Button>\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMeta = async e => {\n    e.preventDefault();\n    console.log(meta);\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:8081/meta\", {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const respEnv = await res.json();\n\n      if (respEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: respEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'success',\n          message: respEnv.message\n        });\n      }\n    } catch (err) {\n      setResponse({\n        formSave: false,\n        type: 'success',\n        message: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar minhas Metas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 50\n        }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 52\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              id: \"description\",\n              placeholder: \"Descri\\xE7\\xE3o\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"status\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"status da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: true,\n            children: \"Envando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["C:/Users/filip/Desktop/Filipe/projeto/site/pages/cadastrar.js"],"names":["React","useState","Jumbotron","Container","Button","Form","FormGroup","Label","Input","FormText","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMeta","preventDefault","console","log","res","fetch","method","body","JSON","stringify","headers","respEnv","json","error","err"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,SAA7C,EAAwDC,KAAxD,EAA+DC,KAA/D,EAAsEC,QAAtE,QAAsF,YAAtF,C,CACA;AACA;;AAEA,SAASC,SAAT,GAAoB;AAChB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC;AAC7BY,IAAAA,IAAI,EAAE,EADuB;AAE7BC,IAAAA,WAAW,EAAE,EAFgB;AAG7BC,IAAAA,MAAM,EAAE;AAHqB,GAAD,CAAhC;AAMA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAC;AACrCiB,IAAAA,QAAQ,EAAE,KAD2B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,OAAO,EAAE;AAH4B,GAAD,CAAxC;;AAKA,QAAMC,aAAa,GAAGC,CAAC,IAAIV,OAAO,iCAAKD,IAAL;AAAW,KAACW,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAArC,KAAlC;;AACA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEAM,IAAAA,WAAW,CAAC;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAAX;;AACA,QAAI;AACJ,YAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf,CAF4C;AAGlDwB,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAHyC,OAA/B,CAAvB;AAKA,YAAMC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAtB;;AAEA,UAAID,OAAO,CAACE,KAAZ,EAAkB;AACdrB,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAE,KADF;AAERC,UAAAA,IAAI,EAAE,OAFE;AAGRC,UAAAA,OAAO,EAAEgB,OAAO,CAAChB;AAHT,SAAD,CAAX;AAKH,OAND,MAOK;AACDH,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAE,KADF;AAERC,UAAAA,IAAI,EAAE,SAFE;AAGRC,UAAAA,OAAO,EAAEgB,OAAO,CAAChB;AAHT,SAAD,CAAX;AAKH;AACJ,KAtBG,CAsBF,OAAOmB,GAAP,EAAY;AACNtB,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAE,KADF;AAERC,QAAAA,IAAI,EAAE,SAFE;AAGRC,QAAAA,OAAO,EAAE;AAHD,OAAD,CAAX;AAKH;AACJ,GAlCD;;AAmCA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKJ,QAAQ,CAACG,IAAT,KAAkB,OAAlB,gBAA4B;AAAA,oBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAAwD,EAH7D,EAIKJ,QAAQ,CAACG,IAAT,KAAkB,SAAlB,gBAA8B;AAAA,oBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA9B,GAA0D,EAJ/D,eAKI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEK,QAAhB;AAAA,kCACI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,MAAxB;AAA+B,cAAA,EAAE,EAAC,MAAlC;AAAyC,cAAA,WAAW,EAAC,cAArD;AAAoE,cAAA,QAAQ,EAAEJ;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,aAAxB;AAAsC,cAAA,EAAE,EAAC,aAAzC;AAAuD,cAAA,WAAW,EAAC,iBAAnE;AAA+E,cAAA,QAAQ,EAAEA;AAAzF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,QAAxB;AAAiC,cAAA,EAAE,EAAC,QAApC;AAA6C,cAAA,WAAW,EAAC,gBAAzD;AAA0E,cAAA,QAAQ,EAAEA;AAApF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,EAaKL,QAAQ,CAACE,QAAT,gBAAoB,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApB,gBAAwE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAb7E;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH;;AAED,eAAeR,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n//import { Button } from 'reactstrap';\r\n//<Button color=\"danger\">Danger!</Button>\r\n\r\nfunction Cadastrar(){\r\n    const [meta, setMeta] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: '',\r\n    });\r\n\r\n    const [response, setResponse] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n    const onChangeInput = e => setMeta({...meta, [e.target.name]: e.target.value})\r\n    const sendMeta = async e => {\r\n        e.preventDefault();\r\n        console.log(meta);\r\n\r\n        setResponse({formSave: true});\r\n        try {\r\n        const res = await fetch(\"http://localhost:8081/meta\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(meta),\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n        const respEnv = await res.json();\r\n\r\n        if (respEnv.error){\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: respEnv.message,\r\n            })\r\n        }\r\n        else {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'success',\r\n                message: respEnv.message,\r\n            });\r\n        }\r\n    } catch (err) {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'success',\r\n                message: '',\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Jumbotron fluid className=\"form\">\r\n                <Container>\r\n                    <h1 className=\"display-4 text-center\">Cadastrar minhas Metas</h1>\r\n                    <hr />\r\n                    {response.type === 'error' ? <p>{response.message}</p> : \"\"}\r\n                    {response.type === 'success' ? <p>{response.message}</p> : \"\"}\r\n                    <Form onSubmit={sendMeta}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Nome:</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Nome da meta\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Descrição:</Label>\r\n                            <Input type=\"text\" name=\"description\" id=\"description\" placeholder=\"Descrição\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"status\">Status:</Label>\r\n                            <Input type=\"text\" name=\"status\" id=\"status\" placeholder=\"status da meta\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n                        {response.formSave ? <Button type=\"submit\" disabled>Envando...</Button>: <Button type=\"submit\">Cadastrar</Button>}\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}